worker_processes 1;

events {
    worker_connections 1024;
}

http {

    sendfile on;
    server_tokens off;


    upstream react-frontend {
        server react-frontend:80;
    }

    upstream go-backend {
        server go-backend:8000;
    }


    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $server_name;

    # Redirect all traffic to HTTPS
    server {
        listen 80;
        return 301 https://$host$request_uri;

    }

    server {
        root /www/data;
        listen 443 ssl http2;

        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";

        ssl_certificate /etc/nginx/ssl/self.crt;
        ssl_certificate_key /etc/nginx/ssl/self.key;


        # Disable SSL
        ssl_protocols TLSv1.2 TLSv1.3;

        # Optimise cipher suits
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # Enable DH Params
        ssl_dhparam /etc/nginx/ssl/dhparam.pem;

        # Enable HSTS
        add_header Strict-Transport-Security "max-age=63072000" always;

        # SSL sessions
        ssl_session_cache shared:SSL:40m;
        ssl_session_timeout 4h;
        ssl_session_tickets on;

        location / {
            proxy_pass http://react-frontend/;
            proxy_redirect off;
        }

        location /api {
            proxy_pass http://go-backend;
            proxy_redirect off;
        }

        location /ws {
            proxy_pass http://go-backend;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }

}
